!function(e){"use strict";function r(r,i,t,a){function s(i){var t=e.merge(this,n);try{if(!i)throw new Error("Required parameter missing when instantiating Swank.");var s=t.load(i);s.then(function(e){var r=new a(e).validate();t.errors=r.errors,t.swagger=r.swagger})}catch(e){r.error(e)}return t}var n={errors:[],swagger:{}};return s.prototype.load=function(e){var a=t.defer();if(_.isString(e)&&e.match(/^http/)&&i.get(e).then(function(e){a.resolve(e.data)},function(e,i){a.reject(e),r.error(e,i)}),_.isObject(e))a.resolve(e);else try{var s=JSON.parse(e);a.resolve(s)}catch(e){r.error("Invalid JSON: "+e.message.split("in JSON")[0].trim())}return a.promise},s}r.$inject=["$log","$http","$q","SwankValidator"],e.module("swank",[]).factory("Swank",r)}(angular),function(e,r){"use strict";function i(i){function t(r){var i=this;e.extend(i,{errors:[],swagger:{},validations:{}});try{i.swagger=_.isObject(r)?r:JSON.parse(r)}catch(e){i.addError("Invalid JSON: "+e.message.split("in JSON")[0].trim()),i.swagger={}}return i}return t.prototype.addError=function(e){var r=this;r.errors.push(e)},t.prototype.validate=function(){var e=this,t=e.swagger.swagger||"2.0",a=r.SwankRuleSets[t];return _.isArray(a)?(_.forEach(a,function(r){e.test(r)}),_.forEach(e.errors,function(e){i.error(e)})):i.error("Failed to load validation rules for version "+t),e},t.prototype.test=function(e){var r=this,t=e.path.split("."),a=_.result(r.swagger,t,void 0),s=e.error||"The path '"+e.path+"' is invalid.",n=r.validations[e.path]=r.validations[e.path]||{},o=!_.isUndefined(a),c=!0;if(n.exists=o,_.has(e,"required")&&(c&=e.required&&o),_.has(e,"requiredIf"))if(_.isArray(e.requiredIf)){var l=e.requiredIf[0],u=e.requiredIf[1]||"exists",d=e.requiredIf[2]||null,h=r.validations[l];switch(u.toLowerCase()){case"exists":o&&(c&=n.conditional=h.exists&&h.isValid&&o);break;case"matches":var f=h.exists&&h.isValid,p=_.result(r.swagger,l.split("."),void 0);c&=n.conditional=f&&p===d}}else i.error("Bad validation rule. 'requiredIf' must be an array.");if(o&&(_.has(e,"matches")&&(c&=Boolean(!_.isUndefined(e.matches)&&e.matches===a)),_.has(e,"isType")))switch(e.isType.toLowerCase()){case"string":c&=Boolean(o&&_.isString(a));break;case"number":c&=Boolean(o&&_.isNumber(a));break;case"object":c&=Boolean(o&&_.isPlainObject(a));break;case"array":c&=Boolean(o&&_.isArray(a))}n.isValid=c,c||r.addError(s)},t}i.$inject=["$log"],e.module("swank").factory("SwankValidator",i)}(angular,window),function(e){"use strict";e.SwankRuleSets=e.SwankRuleSets||{},e.SwankRuleSets["2.0"]=[{path:"swagger",required:!0,matches:"2.0",error:"The 'swagger' key must exist at the root of the JSON and only version 2.0 is accepted."},{path:"info",required:!0,isType:"object",error:"The 'info' key must exist at the root of the JSON and be an object."},{path:"info.title",isType:"string",required:!0,error:"The 'info.title' is missing or is invalid."},{path:"info.version",isType:"string",required:!0,error:"The 'info.version' is missing or is invalid."},{path:"info.description",isType:"string",error:"The 'info.description' is invalid. It must be a string."},{path:"info.termsOfService",isType:"string",error:"The 'info.termsOfService' is invalid. It must be a string."},{path:"info.contact",type:"object",error:"The 'info.contact' object is invalid."},{path:"info.contact.name",isType:"string",requiredIf:["info.contact"],error:"The 'info.contact.name' value is invalid. It must be a string."},{path:"info.contact.url",isType:"url",error:"The 'info.contact.url' value is invalid. It must be a complete URL."},{path:"info.contact.email",type:"email",error:"The 'info.contact.email' value is invalid. It must be a valid email."},{path:"info.license",isType:"object",error:"The 'info.license' object is invalid."},{path:"info.license.name",isType:"string",requiredIf:["info.license"],error:"The 'info.license.name' value is invalid. It must be a string."},{path:"info.license.url",isType:"url",error:"The 'info.license.url' value is invalid. It must be a complete URL."},{path:"paths",required:!0,isType:"object",error:"The 'paths' key must exist at the root of the JSON and be an object."}]}(window);