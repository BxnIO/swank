function valuesByKey(t,r,e){return e=e||[],_.uniq(_.flatten(_.map(t,function(t){return t[r]&&_.forEach(t[r],function(t){e.push(t)}),_.isObject(t)&&!_.isArray(t)?valuesByKey(t,r,e):e})))}!function(t){"use strict";function r(r,n,o,a,s){function c(e){var n=t.extend(this,i);try{if(!e)throw new Error("Required parameter missing instantiating Swank.");var o=n.load(e);o.then(function(t){var e=n.schemaUrl(t.version||null),o=n.fetchSchema(e);o.then(function(o){var s;try{if(s=new ZSchema({breakOnFirstError:!1}),!_.isObject(s))throw new Error("ZSchema library not found.")}catch(t){return void r.error(t)}s.setRemoteReference(e,o);var c=s.validate(t,{$ref:e});n.errors=c?[]:s.getLastErrors(),n.doc=t,n.logErrors(),n.parse(),a.$broadcast("swankloaded")})})}catch(t){r.error(t)}return n}var i={errors:[],doc:{},objects:{tagnames:[]},options:{orderPaths:"tag"}};return c.prototype.load=function(t){var e=o.defer();if(_.isString(t)&&t.match(/^http/))n.get(t).then(function(t){e.resolve(t.data)},function(t,n){e.reject(t),r.error(t,n)});else if(_.isObject(t))e.resolve(t);else try{var a=JSON.parse(t);e.resolve(a)}catch(t){r.error("Invalid JSON: "+t.message.split("in JSON")[0].trim())}return e.promise},c.prototype.schemaUrl=function(t){t=t||"2.0";var r="v"+String(t).match(/(\d{1,}(\.\d{1,})?)/)[1];return r+=1===r.split(".").length?".0":"",e+r+"/schema.json"},c.prototype.fetchSchema=function(t){var e=o.defer();return n.get(t).then(function(t){e.resolve(t.data)},function(t,n){e.reject(t),r.error(t,n)}),e.promise},c.prototype.logErrors=function(){var t=this;_.forEach(t.errors,function(t){r.error(t.code+": "+t.message+". Under "+t.path.replace("#/","{ROOT}/")+".")})},c.prototype.parse=function(){var r=this;r.objects.tags=r.doc.tags||{},_.isObject(r.doc.tags)?r.objects.tagnames=_.uniq(_.map(r.doc.tags,function(t){return t.name})):r.objects.tagnames=valuesByKey(r.doc.paths,"tags")||[],t.extend(r.objects,new s(r.doc.paths,r.options))},c.prototype.groupPaths=function(e){var n=this,o=["route","method","tag"];e&&o.indexOf(e)!==-1?(n.options.orderPaths=e,t.extend(n.objects,new s(n.doc.paths,n.options))):r.warn("Invalid group-by option for Swank.")},c}var e="https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/schemas/";r.$inject=["$log","$http","$q","$rootScope","SwankPaths"],t.module("swank",[]).factory("Swank",r)}(angular),function(t){"use strict";function r(){function r(r,e){t.extend(this,{})}return r}t.module("swank").factory("SwankOperation",r)}(angular),function(t){"use strict";function r(r){function e(r){var e=t.extend(this,r||{});return e}return e.prototype.parse=function(){},e}r.$inject=["SwankOperation"],t.module("swank").factory("SwankPath",r)}(angular),function(t){"use strict";function r(r){function e(r,e){var n=t.extend(this,{paths:{}});return"route"===e.orderPaths&&n.byRoute(r),"method"===e.orderPaths&&n.byMethod(r),"tag"===e.orderPaths&&n.byTag(r,e.tags),n}return e.prototype.byRoute=function(t){var e=this;_.forEach(t,function(t,n){e.paths[n]=new r(t)})},e.prototype.byMethod=function(t){var r=this;r.paths={get:{},put:{},post:{},delete:{},options:{},head:{},patch:{}},_.forEach(t,function(t,e){_.forEach(t,function(t,n){r.paths[n][e]=r.paths[n][e]||{},r.paths[n][e][n]=t})})},e.prototype.byTag=function(t,r){var e=this;r&&_.forEach(r,function(t){e.paths[t]={}}),e.paths.untagged={},_.forEach(t,function(t,r){_.forEach(t,function(t,n){var o=t.tags?t.tags:"untagged";_.forEach(o,function(o){e.paths[o]=e.paths[o]||{},e.paths[o][r]=e.paths[o][r]||{},e.paths[o][r][n]=t})})})},e}r.$inject=["SwankPath"],t.module("swank").factory("SwankPaths",r)}(angular);